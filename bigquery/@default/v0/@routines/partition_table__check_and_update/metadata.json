{
  "routineType": "PROCEDURE",
  "description": "Procedure to check partition stalesns and update partitions if needed.\n\nArguments\n====\n\n- destination: The destination table to check and update partitions.\n- sources: The source tables of destination table. The procedure will check if the source tables have new partitions.\n- partition_alignments: Partition alignment rules. The procedure will check destination staleness correspoinding to each alignment rule.\n- query: The query to update destination table partitions. Its table schema must be same as destination table.\n- options: JSON value\n    * dry_run: Whether to run the update job as a dry run. [Default: false].\n    * tolerate_delay: The delay to tolerate before updating partitions. If newer source partitions are found but its timestamp is within this delay, the procedure will not update partitions. [Default: 0 minutes].\n    * max_update_partition_range: The interval to limit the range of partitions to update. This option is useful to avoid updating too many partitions at once. [Default: 1 month].\n    * via_temp_table: Whether to update partitions via a temporary table. [Default: false].\n    * force_expire_at: The timestamp to force expire partitions. If the destination's partition timestamp is older than this timestamp, the procedure stale the partitions. [Default: null].\n\nExamples\n===\n\n- Check and update partitions of `my_project.my_dataset.my_table` table.\n\n```\nbegin\n  declare query string;\n\n  set query = \"\"\"\n    select date(timestamp_micros(event_timestamp)) as event_date, event_name, count(1)\n    from `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_*`\n    where parse_date('%Y%m%d', _TABLE_SUFFIX) between @begin and @end\n    group by event_date, event_name\n  \"\"\";\n\n  create schema if not exists `zsandbox`;\n  create or replace table `zsandbox.ga4_count`(event_date date, event_name string, records int64)\n  partition by event_date;\n  call `bqmake.v0.partition_table__check_and_update`(\n    (null, 'zsandbox', 'ga4_count')\n    , [('bigquery-public-data', 'ga4_obfuscated_sample_ecommerce', 'events_*')]\n    , `bqmake.v0.alignment_day2day`('2021-01-01', '2021-01-01')\n    , query\n    , null\n  );\nend\n```\n\n",
  "language": "SQL",
  "arguments": [
    {
      "name": "destination",
      "dataType": {
        "typeKind": "STRUCT",
        "structType": {
          "fields": [
            {
              "name": "project_id",
              "type": {
                "typeKind": "STRING"
              }
            },
            {
              "name": "dataset_id",
              "type": {
                "typeKind": "STRING"
              }
            },
            {
              "name": "table_id",
              "type": {
                "typeKind": "STRING"
              }
            }
          ]
        }
      }
    },
    {
      "name": "sources",
      "dataType": {
        "typeKind": "ARRAY",
        "arrayElementType": {
          "typeKind": "STRUCT",
          "structType": {
            "fields": [
              {
                "name": "project_id",
                "type": {
                  "typeKind": "STRING"
                }
              },
              {
                "name": "dataset_id",
                "type": {
                  "typeKind": "STRING"
                }
              },
              {
                "name": "table_id",
                "type": {
                  "typeKind": "STRING"
                }
              }
            ]
          }
        }
      }
    },
    {
      "name": "partition_alignments",
      "dataType": {
        "typeKind": "ARRAY",
        "arrayElementType": {
          "typeKind": "STRUCT",
          "structType": {
            "fields": [
              {
                "name": "destination",
                "type": {
                  "typeKind": "STRING"
                }
              },
              {
                "name": "sources",
                "type": {
                  "typeKind": "ARRAY",
                  "arrayElementType": {
                    "typeKind": "STRING"
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "name": "update_job",
      "dataType": {
        "typeKind": "STRUCT",
        "structType": {
          "fields": [
            {
              "name": "query",
              "type": {
                "typeKind": "STRING"
              }
            },
            {
              "name": "dry_run",
              "type": {
                "typeKind": "BOOL"
              }
            },
            {
              "name": "tolerate_delay",
              "type": {
                "typeKind": "INTERVAL"
              }
            },
            {
              "name": "max_update_interval",
              "type": {
                "typeKind": "INT64"
              }
            },
            {
              "name": "via_temp_table",
              "type": {
                "typeKind": "BOOL"
              }
            }
          ]
        }
      }
    }
  ]
}